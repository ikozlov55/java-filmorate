CREATE TABLE IF NOT EXISTS films (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    description varchar(200) NOT NULL,
    release_date date NOT NULL,
    duration int NOT NULL,
    mpa_id int NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS genres (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS films_genres (
    film_id int REFERENCES films (id),
    genre_id int REFERENCES genres (id),
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(255) NOT NULL,
    login varchar(100) NOT NULL,
    name varchar(100) NOT NULL,
    birthday date NOT NULL
);

CREATE TABLE IF NOT EXISTS users_films_likes (
    film_id int REFERENCES films (id),
    user_id int REFERENCES users (id),
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS users_friends_requests (
    user_id int REFERENCES users (id),
    friend_id int REFERENCES users (id),
    status varchar(20) NOT NULL,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS reviews (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content text NOT NULL,
    is_positive boolean NOT NULL,
    user_id int REFERENCES users (id),
    film_id int REFERENCES films (id)
);

CREATE TABLE IF NOT EXISTS users_reviews_ratings (
    user_id int REFERENCES users (id),
    review_id int REFERENCES reviews (id),
    score smallint NOT NULL
);